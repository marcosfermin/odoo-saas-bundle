services:
  postgres:
    image: postgres:15
    container_name: odoo_pg
    restart: unless-stopped
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: changeme123
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: odoo_redis
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1000", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  odoo:
    image: odoo:16.0
    container_name: odoo_app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      HOST: postgres
      USER: odoo
      PASSWORD: changeme123
    command: ["odoo", "-c", "/etc/odoo/odoo.conf", "--proxy-mode", "--db-filter=^%d$$"]
    volumes:
      - ./config/odoo/odoo.conf:/etc/odoo/odoo.conf:ro
      - odoo_filestore:/var/lib/odoo
      - ./custom-addons:/mnt/extra-addons
    ports:
      - "8069:8069"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8069/web/database/selector || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: odoo_admin
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: odoo
      PG_PASSWORD: changeme123
      SECRET_KEY: changeme_random_32chars
      BOOTSTRAP_EMAIL: owner@example.com
      BOOTSTRAP_PASSWORD: changeme
      PORT: 9090
      DOMAIN: odoo.example.com
      REDIS_URL: redis://redis:6379/0
      DOCKER_ENV: 1
      ADMIN_DB_PATH: /opt/odoo-admin/admin.db
    volumes:
      - ./app/admin_dashboard.py:/app/admin_dashboard.py:ro
      - admin_state:/opt/odoo-admin
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9090/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10

  admin_workers:
    build:
      context: ./admin
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      admin:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: odoo
      PG_PASSWORD: changeme123
      SECRET_KEY: changeme_random_32chars
      REDIS_URL: redis://redis:6379/0
      DOCKER_ENV: 1
    volumes:
      - ./app/admin_dashboard.py:/app/admin_dashboard.py:ro
    command: ["python", "-m", "rq.cli", "worker", "-u", "redis://redis:6379/0", "odoo_admin_jobs"]

  nginx:
    image: nginx:stable-alpine
    container_name: odoo_nginx
    restart: unless-stopped
    depends_on:
      - odoo
      - admin
    volumes:
      - ./config/nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/nginx/snippets:/etc/nginx/snippets:ro
      - ./config/nginx/.admin_htpasswd:/etc/nginx/.admin_htpasswd:ro
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
  redisdata:
  odoo_filestore:
  admin_state:
