---
version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: odoo_pg
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: odoo_redis
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1000", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  odoo:
    image: odoo:16.0
    container_name: odoo_app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      HOST: postgres
      USER: ${PG_USER}
      PASSWORD: ${PG_PASSWORD}
      WORKERS: "4"
      LIMIT_TIME_CPU: "120"
      LIMIT_TIME_REAL: "240"
    command: [
      "odoo",
      "-c", "/etc/odoo/odoo.conf",
      "--proxy-mode",
      "--http-interface=0.0.0.0",
      "--db-filter=^%d$$"
    ]
    volumes:
      - ./config/odoo/odoo.conf:/etc/odoo/odoo.conf:ro
      - odoo_filestore:/var/lib/odoo
      - ./custom-addons:/mnt/extra-addons
    expose:
      - "8069"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -fsS http://localhost:8069/web | grep -q 'Odoo'
      interval: 20s
      timeout: 5s
      retries: 10

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: odoo_admin
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - ./admin/.env
    volumes:
      - odoo_log:/var/log/odoo:ro
    expose:
      - "9090"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -fsS http://localhost:9090/login | grep -q 'Admin Login'
      interval: 20s
      timeout: 5s
      retries: 10

  admin_workers:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: odoo_admin_workers
    restart: unless-stopped
    depends_on:
      admin:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./admin/.env
    command: ["rq", "worker", "-u", "${REDIS_URL}", "odoo_admin_jobs"]
    healthcheck:
      test: ["CMD-SHELL", "rq info -u ${REDIS_URL} | grep -q odoo_admin_jobs"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:stable-alpine
    container_name: odoo_nginx
    restart: unless-stopped
    depends_on:
      - odoo
      - admin
    volumes:
      - ./config/nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/nginx/snippets:/etc/nginx/snippets:ro
      - letsencrypt:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD-SHELL", "nginx -t"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
  redisdata:
  odoo_filestore:
  odoo_log:
  letsencrypt:
  certbot-www:
