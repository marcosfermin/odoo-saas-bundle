# GKE Filestore RWX StorageClass + PVC for Odoo Filestore
# Uncomment the following to use dynamic provisioning with GKE Filestore CSI Driver.
# Make sure you have installed the GKE Filestore CSI Driver in your cluster:
# https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/gke-filestore-csi-driver
# Also ensure your GKE nodes have network access to the Filestore instance.
# Note: GKE Filestore dynamic provisioning may incur additional costs.
# See: https://cloud.google.com/filestore/pricing


# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: odoo-rwx
# provisioner: filestore.csi.storage.gke.io
# allowVolumeExpansion: true
# parameters:
#   tier: ENTERPRISE           # or STANDARD / ZONAL
#   network: default
#   protocol: nfs
#   # Optional: specify location/zone if needed:
#   # location: us-central1
# reclaimPolicy: Retain
# volumeBindingMode: Immediate
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: odoo-filestore
#   namespace: odoo-saas
# spec:
#   accessModes: ["ReadWriteMany"]
#   resources:
#     requests:
#       storage: 20Gi
#   storageClassName: odoo-rwx


# # For static provisioning:
# # If you prefer to manually create a PV for GKE Filestore, use this instead:
# # Replace these with your Filestore export IP/path
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: odoo-filestore-pv
# spec:
#   capacity:
#     storage: 20Gi
#   accessModes: ["ReadWriteMany"]
#   persistentVolumeReclaimPolicy: Retain
#   nfs:
#     server: 10.0.0.5            # Filestore IP
#     path: /odoo-filestore       # Export
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: odoo-filestore
#   namespace: odoo-saas
# spec:
#   accessModes: ["ReadWriteMany"]
#   resources:
#     requests:
#       storage: 20Gi
#   volumeName: odoo-filestore-pv